/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dell;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;


import java.awt.Font.*;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.*;
import java.util.*;
import java.sql.*; 
import com.itextpdf.text.*;
//import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.pdf.*;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.FileOutputStream;

/**
 *
 * @author aa
 */
public class report123 extends javax.swing.JFrame {
    String lab,comp;

    /**
     * Creates new form report123
     */
     Statement stmt;
    public report123() {
        this.getContentPane().setBackground(new Color(204,255,255));
      /**  try
        {
            Class.forName("com.mysql.jdbc.Driver");
            //DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
            System.out.println("Connecting....");
            Connection conn= DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            System.out.println("Connected successfully....");
            stmt = conn.createStatement();
        }
        catch(Exception e)
        {
        System.out.println("erro"+e);}
        * **/
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Deadstock Register Software");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CL1", "CL2", "CL3", "All" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Report Generation");

        jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Select Lab");

        jLabel2.setBackground(new java.awt.Color(51, 51, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Select Component");

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Generate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mouse", "Keyboard", "Monitor", "CPU", "All" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 204, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, 66)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        lab = jComboBox1.getSelectedItem().toString();
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jComboBox1ActionPerformed(evt);
        jComboBox2ActionPerformed(evt);
        
        
        
        //for cl1 mouse
        
         if(jComboBox1.getSelectedItem().toString().equals("CL1") && jComboBox2.getSelectedItem().toString().equals("Mouse"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL1_Mouse.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         //for mouse in cl2
         
         if(jComboBox1.getSelectedItem().toString().equals("CL2") && jComboBox2.getSelectedItem().toString().equals("Mouse"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL2_Mouse.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         //for cl3 mouse
         
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL3") && jComboBox2.getSelectedItem().toString().equals("Mouse"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL3_Mouse.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
        
         
         
         
         
         
         //for CL1 All
         if(jComboBox1.getSelectedItem().toString().equals("CL1") && jComboBox2.getSelectedItem().toString().equals("All"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL1_All.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         
         
         //for cl1 keyboard
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL1") && jComboBox2.getSelectedItem().toString().equals("Keyboard"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL1_Keyboard.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         
         
         //for cl2 keyboard
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL2") && jComboBox2.getSelectedItem().toString().equals("Keyboard"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL2_Keyboard.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         //for cl3 keyboard
         if(jComboBox1.getSelectedItem().toString().equals("CL3") && jComboBox2.getSelectedItem().toString().equals("Keyboard"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL3_Keyboard.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         
         //for cl1 c.p.u
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL1") && jComboBox2.getSelectedItem().toString().equals("CPU"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL1_CPU.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         
         
         
         //for cl2 c.p.u
         
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL2") && jComboBox2.getSelectedItem().toString().equals("CPU"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL2_CPU.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         //for CL3 CPU
         
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL3") && jComboBox2.getSelectedItem().toString().equals("CPU"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL3_CPU.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         
         
         
         //for CL1 Monitor
         
         if(jComboBox1.getSelectedItem().toString().equals("CL1") && jComboBox2.getSelectedItem().toString().equals("Monitor"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL1_Monitor.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            }
         
         
         
         //for CL2 Monitor
         
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL2") && jComboBox2.getSelectedItem().toString().equals("Monitor"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
           
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL2_Monitor.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         
         
         //for CL3 Monitor
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL3") && jComboBox2.getSelectedItem().toString().equals("Monitor"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"' and component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL3_Monitor.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         //for CL2 ALL
         
         
         if(jComboBox1.getSelectedItem().toString().equals("CL2") && jComboBox2.getSelectedItem().toString().equals("All"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL2_All.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
         
         
         
         //for CL3 All
         
         
         
          if(jComboBox1.getSelectedItem().toString().equals("CL3") && jComboBox2.getSelectedItem().toString().equals("All"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where labname='"+lab+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("CL3_All.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
          
          
          
          
          
          
           if(jComboBox1.getSelectedItem().toString().equals("All") && jComboBox2.getSelectedItem().toString().equals("All"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab ");
            
            
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("All_All.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
          
          
           
           
           
           
           
           
           
           
           
           //for All Mouse
           
            if(jComboBox1.getSelectedItem().toString().equals("All") && jComboBox2.getSelectedItem().toString().equals("Mouse"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where component='"+comp+"'");
            
           
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("All_Mouse.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
            
            
            
            
            
            
            
            
            //for All Keyboard
            
            if(jComboBox1.getSelectedItem().toString().equals("All") && jComboBox2.getSelectedItem().toString().equals("Keyboard"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("All_Keyboard"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
          
            
            
            
            
            
            
            
            //for all Monitor
            
            
            
            if(jComboBox1.getSelectedItem().toString().equals("All") && jComboBox2.getSelectedItem().toString().equals("Monitor"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("All_Monitor.pdf"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
            
            
            
            
            
            
            
            //for All CPU
            
            
            if(jComboBox1.getSelectedItem().toString().equals("All") && jComboBox2.getSelectedItem().toString().equals("CPU"))
            {
        try {
            
            
            Class.forName ("com.mysql.jdbc.Driver");
            Connection conn = null;
            try {
                conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/lab","root","");
            } catch (SQLException ex) {
                Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
            }
            Statement stmt = conn.createStatement();
            /* Define the SQL query */
            //            int a = stmt.executeUpdate("insert into lab(component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark) values('"+comp+"','"+lab+"','"+dead+"','"+sr+"','"+brand+"','"+dop+"','','','','','"+price+"','')");
            
            //ResultSet query_set = stmt.executeQuery("SELECT component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,problemdescription,status,price,remark FROM lab");
            ResultSet query_set = stmt.executeQuery("SELECT pcname,component,labname,deadstockno,serialno,brand,datepurchased,dateproblemsolved,dateproblemarrived,status,price,remark FROM lab where component='"+comp+"'");
            
            
             
            Document my_pdf_report = new Document(PageSize.A4.rotate(), 0f, 0f, 0f, 0f);
            //Font("Times New Roman", 1 , 10
            Font f1 = new Font(Font.FontFamily.TIMES_ROMAN, 20);
            float fntSize;
            //lineSpacing;
            
            //fntSize = 10.2f;
            
            //PdfWriter.getInstance(my_pdf_report, new FileOutputStream("pdf_report.pdf"));
            PdfWriter.getInstance(my_pdf_report, new FileOutputStream("All_CPU"));
            my_pdf_report.open();
            
            //we have four columns in our table
            PdfPTable my_report_table = new PdfPTable(12);
            
            //create a cell object
            PdfPCell table_cell;
            // Font colfont = new Font(Font.HELVETICA, 8);
            my_report_table.addCell("Pc Name");
            my_report_table.addCell("Component");
             my_report_table.addCell("Labname");
              my_report_table.addCell("Deadstock");
               my_report_table.addCell("Serial");
                my_report_table.addCell("Brand");
                 my_report_table.addCell("Date Purchased");
                  my_report_table.addCell("Date Problem Arrived");
                   my_report_table.addCell("Date Problem Solved");
                    my_report_table.addCell("Status");
                     my_report_table.addCell("Price");
                      my_report_table.addCell("Remark");
            while (query_set.next()) {
                
                String pcname=query_set.getString("pcname");
                table_cell=new PdfPCell(new Phrase(pcname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                FontSelector selector = new FontSelector();
                // Font f1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 5);
                
                
                
                
                String component = query_set.getString("component");
                
                // component.setSize(10);
                //component.setSize(2f);
                
                //component.setFont(new Font(Font.FontFamily.HELVETICA, 10));
                
                table_cell=new PdfPCell(new Phrase(component));
                
                
                //selector.addFont(f1);
                //Phrase ph = selector.process(component);
                table_cell.setFixedHeight(30f);
                
                my_report_table.addCell(table_cell);
                
                String labname=query_set.getString("labname");
                table_cell=new PdfPCell(new Phrase(labname));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String deadstockno=query_set.getString("deadstockno");
                table_cell=new PdfPCell(new Phrase(deadstockno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String serialno=query_set.getString("serialno");
                table_cell=new PdfPCell(new Phrase(serialno));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String brand=query_set.getString("brand");
                table_cell=new PdfPCell(new Phrase(brand));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String datepurchased=query_set.getString("datepurchased");
                table_cell=new PdfPCell(new Phrase(datepurchased));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemarrived=query_set.getString("dateproblemarrived");
                table_cell=new PdfPCell(new Phrase(dateproblemarrived));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String dateproblemsolved=query_set.getString("dateproblemsolved");
                table_cell=new PdfPCell(new Phrase(dateproblemsolved));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                /**
                String problemdescription=query_set.getString("problemdescription");
                table_cell=new PdfPCell(new Phrase(problemdescription));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                */
                String status=query_set.getString("status");
                table_cell=new PdfPCell(new Phrase(status));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String price=query_set.getString("price");
                table_cell=new PdfPCell(new Phrase(price));
                table_cell.setFixedHeight(30f);
                my_report_table.addCell(table_cell);
                
                String remark=query_set.getString("remark");
                table_cell=new PdfPCell(new Phrase(remark));
                my_report_table.addCell(table_cell);
                
                
                
                float[] columnWidths = new float[]{30f, 35f, 29f, 34f, 25f , 30f ,34f, 34f, 34f, 28f, 18f, 25f };
                my_report_table.setWidths(columnWidths);
                
                //my_report_table.setFont(f1);
                // selector.addFont(f1);
                //Phrase ph = selector.process(TEXT);
                
                
                
            }
            /* Attach report table to PDF */
            //document.add(new Chunk(    "This is sentence 1. ", font1));
            // my_report_table.setFont(new Font("TimesNewRoman",Font.ITALIC, 10));
            my_pdf_report.add(my_report_table);
            my_pdf_report.close();
            
            /* Close all DB related objects */
            query_set.close();
            stmt.close();
            conn.close();
            
            
// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(report123.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
         
            
            
            
            
            
            
            
            
            
         
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
         comp = jComboBox2.getSelectedItem().toString();
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new mainJFrame().setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(report123.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(report123.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(report123.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(report123.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new report123().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
